{"version":3,"sources":["components/layout/Logout.js","store/actions/authAction.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dash/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dash/Dashboard.js","components/project/ProjectDetails.js","components/auth/Signin.js","components/auth/Signup.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","onClick","SignedInLinks","NavLink","to","profile","initials","layout_Logout","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","ProjectSummary","_ref","projects","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","project","Link","project_ProjectSummary","Dashboard","_this$props","this","project_ProjectList","dash_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","getSate","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a47609a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'; \r\nimport {signOut} from '../../store/actions/authAction';\r\n\r\nfunction Logout(props) {\r\n  return (\r\n    <div>\r\n\r\n        <button className='link-button' onClick={props.signOut}> Log out </button>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       signOut:() => dispatch(signOut())\r\n    }\r\n }\r\n \r\n export default connect(null, mapDispatchToProps)(Logout); \r\n","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        )\r\n            .then(() => {\r\n                dispatch({ type: 'LOGIN_SUCCESS' })\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: 'LOGIN_ERROR', err })\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut()\r\n            .then(() => {\r\n                dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getSate, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        )\r\n            .then((resp) => {\r\n                return firestore.collection('users').doc(resp.user.uid).set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0]\r\n                })\r\n                    .then(() => {\r\n                        dispatch({ type: 'SIGNUP_SUCCESS' })\r\n                    })\r\n                    .catch(err => {\r\n                        dispatch({ type: 'SIGNUP_ERROR', err })\r\n                    })\r\n\r\n            })\r\n\r\n    }\r\n}\r\n","import React from 'react'; \r\nimport {NavLink} from 'react-router-dom';\r\nimport Logout from './Logout';\r\n\r\nconst SignedInLinks = (props) => { \r\n  return (\r\n         <ul> \r\n            <li> <NavLink to='/create'>New Project </NavLink> </li>\r\n            <li> <NavLink to='/'> {props.profile.initials} </NavLink> </li>\r\n            <li> <Logout/> </li>\r\n         </ul>    \r\n    );\r\n}\r\n\r\nexport default SignedInLinks; ","import React from 'react'; \r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n         <ul> \r\n            <li> <NavLink to='/signup'>Sign up</NavLink> </li>\r\n            <li> <NavLink to='/signin'> Sign in </NavLink> </li>\r\n         </ul>\r\n    );\r\n}\r\n\r\nexport default SignedOutLinks; ","import React from 'react'; \r\nimport {NavLink} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const {auth, profile} = props; \r\n  const links = auth.uid ? <SignedInLinks profile={profile}/>: <SignedOutLinks/>\r\n  return (\r\n          <nav className=\"navbar navbar-expand-sm bg-light\">\r\n          <div className=\"container\">\r\n          <NavLink to=\"/\"> PM Plan </NavLink>  \r\n          {links}\r\n         </div> \r\n          </nav>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    auth: state.firebase.auth, \r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar); ","import React from 'react'; \r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props; \r\n    return (\r\n        <div className='container'>\r\n            <div className='card'>\r\n                <div className='card-title'>\r\n                    <h4> Notifications </h4>\r\n                    <div className='card-content'>\r\n                        <ul className='notification'>\r\n                           {notifications && notifications.map(item =>{\r\n                                return (\r\n                                  <li key={item.id}>\r\n                                  <span className=\"text-danger\">{item.user}:</span>\r\n                                  <div> \r\n                                      <span>{item.content}</span>\r\n                                 </div>\r\n                                  \r\n                                  </li>\r\n                                );\r\n                           })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Notifications; ","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({projects}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h4>{projects.title} </h4> \r\n                <p> {projects.content} </p>\r\n                <p> {projects.authorFirstName} {projects.authorLastName}</p>\r\n                <p className=\"text-muted\"> {moment(projects.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"container\">\r\n         {projects && projects.map(project => {\r\n             return (\r\n                 <Link key={project.id} to={'/project/' + project.id}> <ProjectSummary projects={project} key={project.id}/> </Link>   \r\n             );\r\n         })}  \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../project/ProjectList';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux'; \r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/> \r\n\r\n         return (\r\n            <div className=\"dash container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\" col-md-4 col-md-offset-8\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects, \r\n        auth: state.firebase.auth, \r\n        notifications: state.firestore.ordered.notifications \r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps), \r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']}, \r\n        {collection: 'notifications', limit:2, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard) ","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect} from 'react-router-dom'; \r\nimport moment from 'moment';\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/> \r\n    if (project) {\r\n        return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\"> {project.title} </h4>\r\n                    <p className=\"card-text\"> {project.content} </p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <div className=\"text-muted\">\r\n                        <p> {project.authorFirstName} {project.authorLastName} </p>\r\n                        <p> {moment(project.createdAt.toDate()).calendar()}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n        <div> \r\n            <p> Loading projects...</p>\r\n        </div>\r\n        )\r\n    }\r\n        \r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);\r\n\r\n","import React, { Component } from 'react'; \r\nimport {connect} from 'react-redux'; \r\nimport {signIn} from '../../store/actions/authAction';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Signin extends Component {\r\n    state = {\r\n        email: '', \r\n        password: ''\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        this.props.signIn(this.state); \r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props; \r\n        if(auth.uid) return <Redirect to='/'/> \r\n        return (\r\n            <div className=\"container col-md-6\">\r\n             <div className=\"row justify-content-center\">  \r\n                <div className=\"card\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <h5 className=\"text-primary text-center\"> Sign in </h5>\r\n                        <label htmlFor=\"email\"> Email </label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                        <label htmlFor=\"password\"> Password </label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                        <button className=\"btn btn-primary\">Login</button>\r\n                        <div className=\"text-danger\"> \r\n                         {authError ? <p> {authError}</p> : null}\r\n                        </div>\r\n                    </form>\r\n                </div>  \r\n                </div>     \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin); \r\n","import React, { Component } from 'react'; \r\nimport {Redirect} from 'react-router-dom'; \r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authAction';\r\n\r\nclass Signup extends Component {\r\n   \r\n    state = {\r\n        email: '', \r\n        password: '', \r\n        firstName: '', \r\n        lastName: ''\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props; \r\n        if(auth.uid) return <Redirect to='/'/> \r\n        return (\r\n            <div className=\"container\">\r\n             <div className=\"row justify-content-center\">  \r\n                <div className=\"card col-md-6\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <h5 className=\"text-primary text-center\"> Sign up </h5>\r\n                        <label htmlFor=\"email\"> Email </label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} className=\"form-control\"/>\r\n                        <label htmlFor=\"password\"> Password </label>\r\n                        <input type=\"password\" id=\"password\" className=\"form-control\" onChange={this.handleChange} />\r\n                        <label htmlFor=\"firstName\"> First Name </label>\r\n                        <input type=\"text\" id=\"firstName\" className=\"form-control\" onChange={this.handleChange} />\r\n                        <label htmlFor=\"lastName\"> Last Name </label>\r\n                        <input type=\"text\" id=\"lastName\" className=\"form-control\" onChange={this.handleChange} />\r\n                        <button className=\"btn btn-primary\">Sign up</button>\r\n                    </form>\r\n                </div>  \r\n                </div>     \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n }\r\n\r\n const mapDispatchToProps = (dispatch) => {\r\n     return {\r\n         signUp: (newUser) => dispatch(signUp(newUser))\r\n     }\r\n }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup); \r\n","import React, { Component } from 'react'; \r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state); \r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props; \r\n        if(!auth.uid) return <Redirect to='/signin'/> \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"card col-md-6\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <h5 className=\"text-primary text-center\"> Create Project </h5>\r\n                            <label htmlFor=\"title\"> Project Title </label>\r\n                            <input type=\"text\" id=\"title\" onChange={this.handleChange} className=\"form-control\" />\r\n                            <label htmlFor=\"content\"> Project Content </label>\r\n                            <textarea id=\"content\" onChange={this.handleChange} className=\"form-control\" /> \r\n                            <button className=\"btn btn-primary\">Create</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {  \r\n    return {\r\n        createProject:(project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n       auth: state.firebase.auth\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to database \r\n        const firestore = getFirestore(); \r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project, \r\n            authorFirstName: profile.firstName, \r\n            authorLastName: profile.lastName, \r\n            authorId: authorId, \r\n            createdAt: new Date()\r\n        })\r\n        .then(() => {\r\n          dispatch({type: 'CREATE_PROJECT', project});  \r\n        })\r\n        .catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERR', err});\r\n        });    \r\n    }\r\n}","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dash/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport Signin from './components/auth/Signin';\nimport Signup from './components/auth/Signup';\nimport CreateProject from './components/project/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router> \n      <div className=\"App\">\n       <Navbar/>\n       <Switch> \n         <Route exact path='/' component={Dashboard} />\n         <Route path='/project/:id' component={ProjectDetails} />\n         <Route path='/signin' component={Signin} />\n         <Route path='/signup' component={Signup} /> \n         <Route path='/create' component={CreateProject} />\n       </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login err');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS': \r\n        console.log('signout successful');\r\n        return state;\r\n        case 'SIGNUP_SUCCESS': \r\n        console.log('sign up succces'); \r\n        return {\r\n            ...state, \r\n            authError: null\r\n        }\r\n        case 'SIGNUP_ERROR' : \r\n        console.log('sign up error'); \r\n        return {\r\n            ...state, \r\n            authError: action.err.message\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer; ","const initState = {\r\n\r\n    projects: [\r\n        { id: '1', title: 'schedule', content: 'create schedule' },\r\n        { id: '2', title: 'budget', content: 'create budget' },\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer'; \r\nimport {combineReducers} from 'redux'; \r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer, \r\n    project: projectReducer, \r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer; \r\n","import firebase from 'firebase/app'; \r\nimport 'firebase/firestore'; \r\nimport 'firebase/auth'; \r\n\r\n// Initialize Firebase\r\nconst config = {\r\n    apiKey: \"AIzaSyAi7dfyIeH6CzWFO41BW9g_m5WpXtjCrR8\",\r\n    authDomain: \"pm-app-64ce6.firebaseapp.com\",\r\n    databaseURL: \"https://pm-app-64ce6.firebaseio.com\",\r\n    projectId: \"pm-app-64ce6\",\r\n    storageBucket: \"pm-app-64ce6.appspot.com\",\r\n    messagingSenderId: \"569903972144\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots: true}); \r\n\r\n  export default firebase; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer'; \nimport {Provider} from 'react-redux'; \nimport thunk from 'redux-thunk'; \nimport {reduxFirestore, getFirestore} from 'redux-firestore'; \nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )   \n  );\n\n  store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n  });\n\n\n"],"sourceRoot":""}